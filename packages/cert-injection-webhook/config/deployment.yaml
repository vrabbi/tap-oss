#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  setup-ca-certs-image
  namespace: cert-injection-webhook
data:
  image: #@ data.values.setup_ca_certs_image or assert.fail("missing setup_ca_certs_image")
---
apiVersion: v1
kind: Secret
metadata:
  name:  cert-injection-webhook-tls
  namespace: cert-injection-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-injection-webhook
  namespace: cert-injection-webhook
  labels:
    app: cert-injection-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-injection-webhook
  template:
    metadata:
      labels:
        app: cert-injection-webhook
    spec:
      serviceAccountName: cert-injection-webhook-sa
      containers:
        - name: server
          image: #@ data.values.pod_webhook_image or assert.fail("missing pod_webhook_image")
          imagePullPolicy: Always
          args:
            #@ for label in data.values.labels:
            - #@ "-label={}".format(label)
            #@ end
            #@ for annotation in data.values.annotations:
            - #@ "-annotation={}".format(annotation)
            #@ end
          volumeMounts:
            - name: webhook-ca-cert
              mountPath: /run/config_maps/ca_cert
              readOnly: true
          ports:
            - containerPort: 8443
              name: webhook-port
          env:
            - name: HTTP_PROXY
              valueFrom:
                configMapKeyRef:
                  name: http-proxy
                  key: value
            - name: HTTPS_PROXY
              valueFrom:
                configMapKeyRef:
                  name: https-proxy
                  key: value
            - name: NO_PROXY
              valueFrom:
                configMapKeyRef:
                  name: no-proxy
                  key: value
            - name: SETUP_CA_CERTS_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: setup-ca-certs-image
                  key: image
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: webhook-ca-cert
          configMap:
            name: ca-cert
---
apiVersion: v1
kind: Service
metadata:
  name: cert-injection-webhook
  namespace: cert-injection-webhook
spec:
  selector:
    app: cert-injection-webhook
  ports:
    - port: 443
      targetPort: webhook-port
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaults.webhook.cert-injection.tanzu.vmware.com
webhooks:
  - name: defaults.webhook.cert-injection.tanzu.vmware.com
    admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: cert-injection-webhook
        namespace: cert-injection-webhook
        path: /podwebhook
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    sideEffects: None

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-injection-webhook-sa
  namespace: cert-injection-webhook
